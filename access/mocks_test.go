// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/smancke/api-manager/access (interfaces: UsageStore)

package access

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of UsageStore interface
type MockUsageStore struct {
	ctrl     *gomock.Controller
	recorder *_MockUsageStoreRecorder
}

// Recorder for MockUsageStore (not exported)
type _MockUsageStoreRecorder struct {
	mock *MockUsageStore
}

func NewMockUsageStore(ctrl *gomock.Controller) *MockUsageStore {
	mock := &MockUsageStore{ctrl: ctrl}
	mock.recorder = &_MockUsageStoreRecorder{mock}
	return mock
}

func (_m *MockUsageStore) EXPECT() *_MockUsageStoreRecorder {
	return _m.recorder
}

func (_m *MockUsageStore) GetLimit(_param0 string, _param1 string, _param2 string, _param3 string) (int, int, uint64, error) {
	ret := _m.ctrl.Call(_m, "GetLimit", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(uint64)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

func (_mr *_MockUsageStoreRecorder) GetLimit(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLimit", arg0, arg1, arg2, arg3)
}

func (_m *MockUsageStore) Log(_param0 string, _param1 string, _param2 string, _param3 map[string]string) {
	_m.ctrl.Call(_m, "Log", _param0, _param1, _param2, _param3)
}

func (_mr *_MockUsageStoreRecorder) Log(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Log", arg0, arg1, arg2, arg3)
}
